import type {Metadata} from "next";
import {Roboto} from "next/font/google";
import "../styles/_app.scss";
import {AppProps} from "next/app";
import Routes from "@/routes";
import {Provider} from "react-redux";
import store, {persistor} from "@/redux/store";
import {PersistGate} from "redux-persist/integration/react";
import {QueryClient, QueryClientProvider} from "@tanstack/react-query";
import Config from "@/config";
import React from "react";

const queryClient = new QueryClient({
  defaultOptions: {
    queries: {
      retry: Config.NETWORK_CONFIG.RETRY,
      refetchOnWindowFocus: false,
    },
  },
});

const roboto = Roboto({
  weight: ["300", "400", "500", "700", "900"],
  subsets: ["latin", "vietnamese"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// export default function RootLayout({
//   Component,
//   pageProps,
//   router,
// }: AppProps): JSX.Element {
//   if (typeof window !== undefined) {
//     return (
//       <Provider store={store}>
//         <PersistGate persistor={persistor}>
//           <QueryClientProvider client={queryClient}>
//             <html lang="en">
//               <body className={roboto.className}>
//                 <Routes
//                   Component={Component}
//                   pageProps={pageProps}
//                   router={router}
//                 ></Routes>
//               </body>
//             </html>
//           </QueryClientProvider>
//         </PersistGate>
//       </Provider>
//     );
//   }
//   return (
//     <Provider store={store}>
//       <QueryClientProvider client={queryClient}>
//         <Routes Component={Component} pageProps={pageProps} router={router} />
//       </QueryClientProvider>
//     </Provider>
//   );
// }

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={roboto.className}>{children}</body>
    </html>
  );
}
