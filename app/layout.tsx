import type {Metadata} from "next";
import {Roboto} from "next/font/google";
import "tailwindcss/tailwind.css";
import "../styles/_app.scss";
import React from "react";
import dynamic from "next/dynamic";
import Routes from "@/routes";
import {cookies} from "next/headers";
import ApiUser, {IGetMeResBody} from "@/apiRequest/ApiUser";
import {AT_COOKIE_NAME} from "@/apiRequest/common";
import CheckTimeSession from "@/utils/check-event/CheckTimeSession";
const ReduxProvider = dynamic(() => import("@/redux/redux-provider"), {
   ssr: false,
});

const roboto = Roboto({
   weight: ["300", "400", "500", "700", "900"],
   subsets: ["latin", "vietnamese"],
});

export const metadata: Metadata = {
   title: "CMS Medpro",
   description: "Generated by create next app",
};

export default async function RootLayout({
   children,
}: Readonly<{
   children: React.ReactNode;
}>) {
   const cookieStore = cookies();
   const access_token = cookieStore.get(AT_COOKIE_NAME);
   let user: IGetMeResBody["data"] | undefined = undefined;
   try {
      if (access_token) {
         const data = await ApiUser.getMeServer(access_token?.value);
         user = data?.payload?.data;
      }
   } catch (error) {
      throw error;
   }
   return (
      <html lang="en">
         <body className={roboto.className}>
            <ReduxProvider>
               <Routes children={children} user={user} />
               <CheckTimeSession />
            </ReduxProvider>
         </body>
      </html>
   );
}
